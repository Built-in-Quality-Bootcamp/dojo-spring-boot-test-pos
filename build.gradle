plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "2.8"
}

group = 'org.built-in-quality'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'com.h2database:h2'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation('io.rest-assured:rest-assured:3.0.3')
    testImplementation('com.github.tomakehurst:wiremock:2.25.1')
    testImplementation('org.seleniumhq.selenium:selenium-chrome-driver:3.141.59')
    testImplementation('org.seleniumhq.selenium:selenium-remote-driver:3.141.59')
    testImplementation('org.seleniumhq.selenium:selenium-api:3.141.59')
    testImplementation('io.github.bonigarcia:webdrivermanager:3.7.1')
}

test {
    useJUnitPlatform()
}

task e2e(type: JavaExec) {
    group = "verification"
    description = "Run E2E test"
    classpath = sourceSets.test.runtimeClasspath
    main = "org.builtinquality.pos.ItemsExternalE2ETest"
}

task installGitPreCommitHooks(type: Copy) {
    from new File(rootProject.rootDir, 'pre-commit')
    into {
        new File(rootProject.rootDir, '.git/hooks')
    }
    fileMode 0755
}

task installGitPrePushHooks(type: Copy) {
    from new File(rootProject.rootDir, 'pre-push')
    into {
        new File(rootProject.rootDir, '.git/hooks')
    }
    fileMode 0755
}

build {
    dependsOn installGitPreCommitHooks
    dependsOn installGitPrePushHooks
}
